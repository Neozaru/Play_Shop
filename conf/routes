# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ASSET
# Map static resources from the /public folder to the /assets URL path
GET        /asset/*file          controllers.Assets.at(path="/public/asset", file)

# Home page
GET     /                           controllers.Application.shop()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

GET		/shop						controllers.Application.shop()

GET		/register					controllers.Accounts.register_page()
POST	/register					controllers.Accounts.register_action()


GET		/login						controllers.Accounts.login_page()
POST	/login						controllers.Accounts.login_action()		

POST	/logout						controllers.Accounts.logout()


GET		/admin						controllers.Admin.admin_page()

POST	/admin/add_product_info			controllers.Admin.add_product_info()
POST	/admin/delete_product_info		controllers.Admin.delete_product_info()

GET		/admin/product_sales/:product_info_id		controllers.Admin.admin_sales_page(product_info_id: Long)

POST	/admin/add_product_sale/:product_info_id		controllers.Admin.add_product_sale(product_info_id: Long)
POST	/admin/delete_product_sale/:product_info_id		controllers.Admin.delete_product_sale(product_info_id: Long)		
	

GET		/cart						controllers.Application.cart()



# Exemple de route a generer pour l'action/transition "loginUser"

#GET	/[nomActionState/]	controllers.[nomControleurGlobalQueIlSeraFixeDoncOsef()/].[nomActionState/]()
GET		/loginuser		controllers.MainController.loginuser()

###

## REST


# For interface ProductsSales
POST /api/productsale	controllers.rest.ProductsSalesWS.add_product_to_shop()

DELETE /api/productsale/:productsale_id	controllers.rest.ProductsSalesWS.remove_product_from_shop(productsale_id : Long)

PUT /api/productsale/:productsale_id	controllers.rest.ProductsSalesWS.edit_product_stock(productsale_id : Long)




# For tests
GET	/api/tests/productsale	controllers.rest.ProductsSalesWS.tests()


# For interface ProductsInfos
POST /api/productinfo	controllers.rest.ProductsInfosWS.new_product_info()

PUT /api/productinfo/:productinfo_id	controllers.rest.ProductsInfosWS.edit_product_info(productinfo_id : Long)

DELETE /api/productinfo/:productinfo_id	controllers.rest.ProductsInfosWS.delete_product_info(productinfo_id : Long)




# For tests
GET	/api/tests/productinfo	controllers.rest.ProductsInfosWS.tests()


